name: Test and deploy backend
on:
  push:
    paths:
      - 'services/backend/**'
      - '.github/workflows/backend.yml'

env:
  APP_ENVIRONMENT: development
  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: eu-central-1

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.13]
        poetry-version: [1.8.5]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
  
      - name: Install dependencies
        run: poetry install --no-root

      - name: Run tests
        run: poetry run pytest tests/ --cov=./ --cov-report=xml --disable-warnings

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.13]
        poetry-version: [1.8.5]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
  
      - name: Install dependencies
        run: poetry install --no-root

      - name: Run ruff check
        run: poetry run ruff check --output-format=github .
    
      - name: Run ruff format
        run: poetry run ruff format --diff

  deploy-development:
    needs: [ test, code-quality ]
    strategy:
        fail-fast: false
        matrix:
          python-version: [3.13]
          poetry-version: [1.8.5]
          node-version: [18]
          os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install serverless framework
        run: npm install -g serverless
      - name: Install npm dependencies
        run: npm ci
      - name: Deploy
        run: sls deploy --stage development --verbose